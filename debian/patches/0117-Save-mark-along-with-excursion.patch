From: "Igor B. Poretsky" <poretsky@rakurs.com>
Date: Tue, 29 Nov 2022 15:40:14 +0300
Subject: Save mark along with excursion

---
 lisp/dtk-unicode.el           |  2 +-
 lisp/emacspeak-advice.el      | 52 ++++++++++++++++++------------------
 lisp/emacspeak-analog.el      |  4 +--
 lisp/emacspeak-arc.el         |  4 +--
 lisp/emacspeak-bbdb.el        |  6 ++---
 lisp/emacspeak-bookshare.el   |  2 +-
 lisp/emacspeak-c.el           |  2 +-
 lisp/emacspeak-cider.el       |  2 +-
 lisp/emacspeak-dired.el       |  8 +++---
 lisp/emacspeak-ecb.el         | 10 +++----
 lisp/emacspeak-edb.el         |  4 +--
 lisp/emacspeak-enriched.el    |  4 +--
 lisp/emacspeak-erc.el         |  2 +-
 lisp/emacspeak-eshell.el      |  8 +++---
 lisp/emacspeak-etable.el      |  2 +-
 lisp/emacspeak-eterm.el       | 48 ++++++++++++++++-----------------
 lisp/emacspeak-eudc.el        |  2 +-
 lisp/emacspeak-evil.el        |  2 +-
 lisp/emacspeak-eww.el         |  8 +++---
 lisp/emacspeak-forms.el       |  4 +--
 lisp/emacspeak-gh-explorer.el |  2 +-
 lisp/emacspeak-gnuplot.el     |  2 +-
 lisp/emacspeak-gnus.el        |  6 ++---
 lisp/emacspeak-gridtext.el    |  2 +-
 lisp/emacspeak-hide.el        | 14 +++++-----
 lisp/emacspeak-imenu.el       |  2 +-
 lisp/emacspeak-indium.el      |  2 +-
 lisp/emacspeak-info.el        | 12 ++++-----
 lisp/emacspeak-jabber.el      |  2 +-
 lisp/emacspeak-jdee.el        |  6 ++---
 lisp/emacspeak-lispy.el       |  2 +-
 lisp/emacspeak-m-player.el    |  2 +-
 lisp/emacspeak-make-mode.el   |  2 +-
 lisp/emacspeak-man.el         |  2 +-
 lisp/emacspeak-maths.el       |  8 +++---
 lisp/emacspeak-metapost.el    |  2 +-
 lisp/emacspeak-mines.el       |  6 ++---
 lisp/emacspeak-muse.el        |  2 +-
 lisp/emacspeak-nxml.el        |  2 +-
 lisp/emacspeak-org.el         |  4 +--
 lisp/emacspeak-origami.el     |  4 +--
 lisp/emacspeak-outline.el     |  4 +--
 lisp/emacspeak-proced.el      |  4 +--
 lisp/emacspeak-pronounce.el   |  2 +-
 lisp/emacspeak-py.el          |  2 +-
 lisp/emacspeak-python.el      |  2 +-
 lisp/emacspeak-redefine.el    |  4 +--
 lisp/emacspeak-ruby.el        |  2 +-
 lisp/emacspeak-shx.el         |  2 +-
 lisp/emacspeak-slime.el       |  4 +--
 lisp/emacspeak-smartparens.el |  2 +-
 lisp/emacspeak-solitaire.el   |  2 +-
 lisp/emacspeak-speak.el       | 62 +++++++++++++++++++++----------------------
 lisp/emacspeak-speedbar.el    | 10 +++----
 lisp/emacspeak-tabulate.el    |  8 +++---
 lisp/emacspeak-tcl.el         |  2 +-
 lisp/emacspeak-tetris.el      |  2 +-
 lisp/emacspeak-vdiff.el       |  4 +--
 lisp/emacspeak-view.el        |  6 ++---
 lisp/emacspeak-vm.el          |  8 +++---
 lisp/emacspeak-w3m.el         |  6 ++---
 lisp/emacspeak-wizards.el     | 10 +++----
 lisp/emacspeak-xml-shell.el   |  2 +-
 lisp/emacspeak-xslt.el        |  2 +-
 lisp/g-client/g-utils.el      |  6 ++---
 65 files changed, 210 insertions(+), 210 deletions(-)

diff --git a/lisp/dtk-unicode.el b/lisp/dtk-unicode.el
index 6ed9179..50d663c 100644
--- a/lisp/dtk-unicode.el
+++ b/lisp/dtk-unicode.el
@@ -318,7 +318,7 @@ Does nothing for unibyte buffers."
   (cl-declare (special dtk-unicode-process-utf8))
   (when dtk-unicode-process-utf8
     (let ((inhibit-read-only t))
-      (save-excursion
+      (save-mark-and-excursion
         (goto-char (point-min))
         (while (re-search-forward dtk-unicode-charset-filter-regexp nil t)
           (let* ((pos (match-beginning 0))
diff --git a/lisp/emacspeak-advice.el b/lisp/emacspeak-advice.el
index c0bb627..5aed21c 100644
--- a/lisp/emacspeak-advice.el
+++ b/lisp/emacspeak-advice.el
@@ -266,7 +266,7 @@ When on a close delimiter, speaking matching open delimiter after a small delay.
             (= ?\) (char-syntax (following-char)))
             (sit-for 0.25))
          (emacspeak-auditory-icon 'item)
-         (save-excursion
+         (save-mark-and-excursion
            (forward-char 1)
            (emacspeak-blink-matching-open)))))))
 
@@ -418,11 +418,11 @@ that were upper cased."
            (cl-minusp current-prefix-arg))
       ad-do-it
       (let ((start (point)))
-        (save-excursion
+        (save-mark-and-excursion
           (forward-word current-prefix-arg)
           (emacspeak-speak-region start (point)))))
      (t ad-do-it
-        (save-excursion
+        (save-mark-and-excursion
           (skip-syntax-forward " ")
           (if (eobp)
               (message "Upper cased final word in buffer")
@@ -444,11 +444,11 @@ the words that were down cased."
            (cl-minusp current-prefix-arg))
       ad-do-it
       (let ((start (point)))
-        (save-excursion
+        (save-mark-and-excursion
           (forward-word current-prefix-arg)
           (emacspeak-speak-region start (point)))))
      (t ad-do-it
-        (save-excursion
+        (save-mark-and-excursion
           (skip-syntax-forward " ")
           (if (eobp)
               (message "Lower cased final word in buffer")
@@ -470,11 +470,11 @@ the words that were capitalized."
            (cl-minusp current-prefix-arg))
       ad-do-it
       (let ((start (point)))
-        (save-excursion
+        (save-mark-and-excursion
           (forward-word current-prefix-arg)
           (emacspeak-speak-region start (point)))))
      (t ad-do-it
-        (save-excursion
+        (save-mark-and-excursion
           (skip-syntax-forward " ")
           (if (eobp)
               (message "Capitalized final word in buffer")
@@ -530,7 +530,7 @@ the words that were capitalized."
 (defadvice kill-word (before emacspeak pre act comp)
   "Speak word before killing it."
   (when (ems-interactive-p)
-    (save-excursion
+    (save-mark-and-excursion
       (skip-syntax-forward " ")
       (when dtk-stop-immediately (dtk-stop))
       (let ((dtk-stop-immediately nil))
@@ -543,7 +543,7 @@ the words that were capitalized."
     (when dtk-stop-immediately (dtk-stop))
     (let ((start (point))
           (dtk-stop-immediately nil))
-      (save-excursion
+      (save-mark-and-excursion
         (forward-word -1)
         (dtk-tone-deletion)
         (emacspeak-speak-region (point) start)))))
@@ -588,7 +588,7 @@ the words that were capitalized."
   (when (ems-interactive-p)
     (let (thisblank singleblank)
       (save-match-data
-        (save-excursion
+        (save-mark-and-excursion
           (forward-line 0)
           (setq thisblank (looking-at "[ \t]*$"))
           ;; Set singleblank if there is just one blank line here.
@@ -620,7 +620,7 @@ see option emacspeak-untabify-fixes-non-breaking-space."
   (when emacspeak-untabify-fixes-non-breaking-space
     (let ((start (ad-get-arg 0))
           (end (ad-get-arg 1)))
-      (save-excursion
+      (save-mark-and-excursion
         (save-restriction
           (narrow-to-region start end)
           (goto-char start)
@@ -642,7 +642,7 @@ see option emacspeak-untabify-fixes-non-breaking-space."
 
 (defadvice pcomplete (around emacspeak pre act comp)
   "Say what you completed."
-  (let ((orig (save-excursion (skip-syntax-backward "^ >") (point))))
+  (let ((orig (save-mark-and-excursion (skip-syntax-backward "^ >") (point))))
     ad-do-it
     (when (ems-interactive-p)
       (emacspeak-speak-region orig (point))
@@ -656,7 +656,7 @@ see option emacspeak-untabify-fixes-non-breaking-space."
   "Speak what was completed."
   (cond
    ((ems-interactive-p)
-    (let ((orig (save-excursion (skip-syntax-backward "^ >" ) (point))))
+    (let ((orig (save-mark-and-excursion (skip-syntax-backward "^ >" ) (point))))
       (ems-with-messages-silenced
        ad-do-it)
       (emacspeak-auditory-icon 'complete)
@@ -883,7 +883,7 @@ icon."
 ;;{{{ Advice completion-at-point:
 (defadvice completion-at-point (around emacspeak pre act comp)
   "Say what you completed."
-  (let ((orig (save-excursion (skip-syntax-backward "^ >_") (point))))
+  (let ((orig (save-mark-and-excursion (skip-syntax-backward "^ >_") (point))))
     ad-do-it
     (when (ems-interactive-p)
       (dtk-speak (buffer-substring orig (point)))
@@ -953,7 +953,7 @@ icon."
         (when (ems-interactive-p)
           (dtk-speak
            (format "%s %s"
-                   (save-excursion (backward-char 1)
+                   (save-mark-and-excursion (backward-char 1)
                                    (sexp-at-point))
                    (or emacspeak-last-message ""))))
         ad-return-value)))))
@@ -1021,7 +1021,7 @@ icon."
      "Say what you completed."
      (ems-with-messages-silenced
       (let* ((deactivate-mark nil)
-             (prior (save-excursion (skip-syntax-backward "^ >") (point))))
+             (prior (save-mark-and-excursion (skip-syntax-backward "^ >") (point))))
         ad-do-it
         (if (> (point) prior)
             (tts-with-punctuations
@@ -1074,7 +1074,7 @@ icon."
   `(defadvice ,f (after emacspeak pre act comp)
      "Provide auditory feedback."
      (when (ems-interactive-p)
-       (save-excursion
+       (save-mark-and-excursion
          (comint-bol-or-process-mark)
          (emacspeak-auditory-icon 'select-object)
          (emacspeak-speak-line 1))))))
@@ -1096,7 +1096,7 @@ icon."
        ad-do-it
        (cond
         ((= (point) (+ count orig))
-         (save-excursion
+         (save-mark-and-excursion
            (forward-word -1)
            (emacspeak-speak-word)))
         (t
@@ -1188,7 +1188,7 @@ icon."
 (defadvice comint-accumulate (before emacspeak pre act comp)
   "Speak the line we are accumulating."
   (when (ems-interactive-p)
-    (save-excursion
+    (save-mark-and-excursion
       (comint-bol)
       (emacspeak-auditory-icon 'select-object)
       (emacspeak-speak-line 1))))
@@ -1203,7 +1203,7 @@ icon."
                   emacspeak pre act comp)
      "Speak the matched input."
      (when (ems-interactive-p)
-       (save-excursion
+       (save-mark-and-excursion
          (goto-char (comint-line-beginning-position))
          (emacspeak-speak-line 1))
        (emacspeak-auditory-icon 'select-object)))))
@@ -1284,7 +1284,7 @@ icon."
   (cond
    ((ems-interactive-p)
     (ems-with-messages-silenced
-     (let ((prior (save-excursion (skip-syntax-backward "^ >") (point))))
+     (let ((prior (save-mark-and-excursion (skip-syntax-backward "^ >") (point))))
        ad-do-it
        (if (> (point) prior)
            (tts-with-punctuations
@@ -1336,7 +1336,7 @@ icon."
   "Provide auditory feedback."
   (when (ems-interactive-p)
     (emacspeak-auditory-icon 'item)
-    (save-excursion
+    (save-mark-and-excursion
       (comint-bol)
       (emacspeak-speak-line 1))))
 
@@ -1642,7 +1642,7 @@ Shell-Dirtrack mode; turning it off does not re-enable it."
   `(defadvice ,f (after emacspeak pre act comp)
      "Give some auditory feedback."
      (emacspeak-auditory-icon 'open-object)
-     (save-excursion
+     (save-mark-and-excursion
        (goto-char (point-min))
        (emacspeak-speak-line)))))
 (cl-loop
@@ -2427,8 +2427,8 @@ Produce an auditory icon if possible."
    ((null isearch-success) (emacspeak-auditory-icon 'search-miss))
    (t
     (emacspeak-auditory-icon 'search-hit)
-    (when (sit-for 0.2)
-      (save-excursion
+    (when (sit-for  0.2)
+      (save-mark-and-excursion
         (ems-set-personality-temporarily
          (point) isearch-other-end voice-bolden
          (dtk-speak
@@ -2739,7 +2739,7 @@ Produce auditory icons if possible."
   (when buffer-read-only (dtk-speak "Buffer is read-only. "))
   (cond
    ((ems-interactive-p)
-    (let ((start (save-excursion (backward-word 1) (point))))
+    (let ((start (save-mark-and-excursion (backward-word 1) (point))))
       ad-do-it
       (dtk-speak (buffer-substring start (point)))))
    (t ad-do-it))
diff --git a/lisp/emacspeak-analog.el b/lisp/emacspeak-analog.el
index 415441b..48d36a5 100644
--- a/lisp/emacspeak-analog.el
+++ b/lisp/emacspeak-analog.el
@@ -109,7 +109,7 @@
 (defun emacspeak-analog-get-field-spec ()
   "Returns field specification if one defined for current entry.
 Nil means no field specified."
-  (save-excursion
+  (save-mark-and-excursion
     (let ((start (previous-single-property-change (point)
                                                   'analog-entry-start)))
       (when start
@@ -145,7 +145,7 @@ Speak field or char moved to."
 
 (defun emacspeak-analog-speak-field (fields)
   "Speak field containing point."
-  (save-excursion
+  (save-mark-and-excursion
     (let ((col (current-column))
           (start nil)
           (end nil)
diff --git a/lisp/emacspeak-arc.el b/lisp/emacspeak-arc.el
index ccd614e..bd148b5 100644
--- a/lisp/emacspeak-arc.el
+++ b/lisp/emacspeak-arc.el
@@ -132,7 +132,7 @@ first initializing it if necessary."
   (unless emacspeak-arc-header-list-format
     (let ((line nil)
           (fields nil))
-      (save-excursion
+      (save-mark-and-excursion
         (goto-char (point-min))
         (setq line (ems--this-line)))
       (setq fields (split-string line))
@@ -146,7 +146,7 @@ first initializing it if necessary."
   emacspeak-arc-header-list-format)
 (defun emacspeak-arc-get-field-index (field)
   (let ((marked-p
-         (save-excursion
+         (save-mark-and-excursion
            (beginning-of-line)
            (= ?\  (following-char))))
         (pos (cadr (assoc field (emacspeak-arc-get-header-line-format)))))
diff --git a/lisp/emacspeak-bbdb.el b/lisp/emacspeak-bbdb.el
index 3a41f93..c23c041 100644
--- a/lisp/emacspeak-bbdb.el
+++ b/lisp/emacspeak-bbdb.el
@@ -79,7 +79,7 @@
   "Provide auditory feedback"
   (when (ems-interactive-p)
     (emacspeak-auditory-icon 'delete-object)
-    (save-excursion
+    (save-mark-and-excursion
       (when (looking-at  "\\?")
         (forward-line 1))
       (emacspeak-speak-line))))
@@ -109,7 +109,7 @@
   "Provide auditory feedback"
   (when (ems-interactive-p)
     (emacspeak-auditory-icon 'large-movement)
-    (save-excursion
+    (save-mark-and-excursion
       (when (looking-at  "\\?")
         (forward-line 1))
       (emacspeak-speak-line))))
@@ -118,7 +118,7 @@
   "Provide auditory feedback"
   (when (ems-interactive-p)
     (emacspeak-auditory-icon 'large-movement)
-    (save-excursion
+    (save-mark-and-excursion
       (when (looking-at  "\\?")
         (forward-line 1))
       (emacspeak-speak-line))))
diff --git a/lisp/emacspeak-bookshare.el b/lisp/emacspeak-bookshare.el
index e3ff481..f6adf65 100644
--- a/lisp/emacspeak-bookshare.el
+++ b/lisp/emacspeak-bookshare.el
@@ -1406,7 +1406,7 @@ Useful for fulltext search in a book."
 (defun emacspeak-bookshare-flush-lines(regexp)
   "Flush lines matching regexp in Bookshare buffer."
   (interactive "sRegexp: ")
-  (save-excursion
+  (save-mark-and-excursion
     (let ((inhibit-read-only t))
       (goto-char (next-single-property-change (point-min) 'face))
       (flush-lines regexp (point) (point-max)))))
diff --git a/lisp/emacspeak-c.el b/lisp/emacspeak-c.el
index a949258..301bd2a 100644
--- a/lisp/emacspeak-c.el
+++ b/lisp/emacspeak-c.el
@@ -318,7 +318,7 @@ and their meanings. ")
                 (concat description
                         ;; that begins this block
                         (let ((start nil))
-                          (save-excursion
+                          (save-mark-and-excursion
                             (forward-line 0)
                             (search-forward "}" nil t)
                             (forward-char 1)
diff --git a/lisp/emacspeak-cider.el b/lisp/emacspeak-cider.el
index 6e9d9d4..76a2afd 100644
--- a/lisp/emacspeak-cider.el
+++ b/lisp/emacspeak-cider.el
@@ -191,7 +191,7 @@
   `(defadvice ,f (after emacspeak pre act comp)
      "Provide auditory feedback."
      (when (ems-interactive-p)
-       (save-excursion
+       (save-mark-and-excursion
          (goto-char
           (previous-single-property-change (point)   'face nil (point-min)))
          (emacspeak-speak-this-personality-chunk))
diff --git a/lisp/emacspeak-dired.el b/lisp/emacspeak-dired.el
index e42ce8a..f80aafe 100644
--- a/lisp/emacspeak-dired.el
+++ b/lisp/emacspeak-dired.el
@@ -361,7 +361,7 @@ Assumes that `dired-listing-switches' contains  -l"
                       "modified on"
                       "modified at"
                       "name")))
-    (save-excursion
+    (save-mark-and-excursion
       (forward-line 0)
       (skip-syntax-forward " ")
       (while (and fields
@@ -386,7 +386,7 @@ unless `dired-listing-switches' contains -l"
       (unwind-protect
           (progn
             (setq buffer-read-only nil)
-            (save-excursion
+            (save-mark-and-excursion
               (goto-char (point-min))
               (dired-goto-next-nontrivial-file)
               (while (not (eobp))
@@ -425,7 +425,7 @@ options passed to command `file'."
   "Speak the header line of the dired buffer. "
   (interactive)
   (emacspeak-auditory-icon 'section)
-  (save-excursion (goto-char (point-min))
+  (save-mark-and-excursion (goto-char (point-min))
                   (forward-line 2)
                   (emacspeak-speak-region (point-min) (point))))
 
@@ -655,7 +655,7 @@ Optional interactive prefix arg shuffles playlist."
   (interactive "P")
   (cl-declare (special emacspeak-m-player-options))
   (cl-assert (eq major-mode 'locate-mode) t "Not in a locate buffer")
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char (point-min))
     (dired-next-line 3)
     (let* ((m3u (make-temp-file "locate-playlist" nil ".m3u"))
diff --git a/lisp/emacspeak-ecb.el b/lisp/emacspeak-ecb.el
index 6698343..83751c9 100644
--- a/lisp/emacspeak-ecb.el
+++ b/lisp/emacspeak-ecb.el
@@ -169,7 +169,7 @@ available."
        ((not (=  start (point)))
         (let ((emacspeak-speak-messages nil)
               (case-fold-search t))
-          (save-excursion
+          (save-mark-and-excursion
             (beginning-of-line)
             (setq beg (point))
             (backward-char 1)
@@ -247,7 +247,7 @@ available."
 (defun emacspeak-ecb-speak-window-methods ()
   "Speak contents of methods window."
   (interactive)
-  (save-excursion
+  (save-mark-and-excursion
     (save-window-excursion
       (ecb-goto-window-methods)
       (emacspeak-speak-buffer))))
@@ -255,7 +255,7 @@ available."
 (defun emacspeak-ecb-speak-window-directories ()
   "Speak contents of directories window."
   (interactive)
-  (save-excursion
+  (save-mark-and-excursion
     (save-window-excursion
       (ecb-goto-window-directories)
       (emacspeak-speak-buffer))))
@@ -263,7 +263,7 @@ available."
 (defun emacspeak-ecb-speak-window-history ()
   "Speak contents of history window."
   (interactive)
-  (save-excursion
+  (save-mark-and-excursion
     (save-window-excursion
       (ecb-goto-window-history)
       (emacspeak-speak-buffer))))
@@ -271,7 +271,7 @@ available."
 (defun emacspeak-ecb-speak-window-sources ()
   "Speak contents of sources window."
   (interactive)
-  (save-excursion
+  (save-mark-and-excursion
     (save-window-excursion
       (ecb-goto-window-sources)
       (emacspeak-speak-buffer))))
diff --git a/lisp/emacspeak-edb.el b/lisp/emacspeak-edb.el
index ed458ce..b3babda 100644
--- a/lisp/emacspeak-edb.el
+++ b/lisp/emacspeak-edb.el
@@ -265,7 +265,7 @@ Use an auditory icon if possible."
 (defadvice db-kill-word (before emacspeak pre act comp)
   "Speak word before killing it."
   (when (ems-interactive-p )
-    (save-excursion
+    (save-mark-and-excursion
       (skip-syntax-forward " ")
       (when dtk-stop-immediately (dtk-stop))
       (let ((dtk-stop-immediately nil))
@@ -278,7 +278,7 @@ Use an auditory icon if possible."
     (when dtk-stop-immediately (dtk-stop))
     (let ((start (point ))
           (dtk-stop-immediately nil))
-      (save-excursion
+      (save-mark-and-excursion
         (forward-word -1)
         (dtk-tone 500 30)
         (emacspeak-speak-region (point) start )))))
diff --git a/lisp/emacspeak-enriched.el b/lisp/emacspeak-enriched.el
index 8c77b06..b0ce912 100644
--- a/lisp/emacspeak-enriched.el
+++ b/lisp/emacspeak-enriched.el
@@ -60,7 +60,7 @@ Useful in voiceifying rich text."
                     emacspeak-enriched-font-faces-to-voiceify))
   (voice-lock-mode (if global-voice-lock-mode 1 -1))
   (with-silent-modifications
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char start)
       (let ((face nil)
             (orig start)
@@ -75,7 +75,7 @@ Useful in voiceifying rich text."
         (while (and  (not (eobp))
                      (< start end))
           (setq justification-type (get-text-property (point) 'justification))
-          (save-excursion
+          (save-mark-and-excursion
             (beginning-of-line)
             (setq pos (point)))
           (goto-char
diff --git a/lisp/emacspeak-erc.el b/lisp/emacspeak-erc.el
index 96e762f..c11fc7f 100644
--- a/lisp/emacspeak-erc.el
+++ b/lisp/emacspeak-erc.el
@@ -148,7 +148,7 @@ spoken.")
   "Helper to prompt for and read person in ERC."
   (read-from-minibuffer
    (format "%s person" action)
-   (save-excursion
+   (save-mark-and-excursion
      (let ((start (point)))
        (search-backward  "<" (point-min) t)
        (when (not (= start (point)))
diff --git a/lisp/emacspeak-eshell.el b/lisp/emacspeak-eshell.el
index d6fda1f..79b7ea8 100644
--- a/lisp/emacspeak-eshell.el
+++ b/lisp/emacspeak-eshell.el
@@ -109,7 +109,7 @@ Provide an auditory icon if possible."
              "Speak selected command."
              (when (ems-interactive-p)
                (emacspeak-auditory-icon 'select-object)
-               (save-excursion
+               (save-mark-and-excursion
                  (beginning-of-line)
                  (eshell-skip-prompt)
                  (emacspeak-speak-line 1))))))
@@ -291,7 +291,7 @@ personalities."
   `(defadvice ,f (around emacspeak pre act comp)
      "Say what you completed."
      (ems-with-messages-silenced
-      (let ((prior (save-excursion (skip-syntax-backward "^ >") (point))))
+      (let ((prior (save-mark-and-excursion (skip-syntax-backward "^ >") (point))))
         ad-do-it
         (if (> (point) prior)
             (tts-with-punctuations
@@ -305,7 +305,7 @@ personalities."
   "Speak what was inserted."
   (when (ems-interactive-p)
     (let ((start
-           (save-excursion
+           (save-mark-and-excursion
              (eshell-bol)
              (point))))
       (emacspeak-auditory-icon 'yank-object)
@@ -314,7 +314,7 @@ personalities."
   "Speak what was inserted."
   (when (ems-interactive-p)
     (let ((start
-           (save-excursion
+           (save-mark-and-excursion
              (eshell-bol)
              (point))))
       (emacspeak-auditory-icon 'yank-object)
diff --git a/lisp/emacspeak-etable.el b/lisp/emacspeak-etable.el
index f28f987..fb1fe44 100644
--- a/lisp/emacspeak-etable.el
+++ b/lisp/emacspeak-etable.el
@@ -98,7 +98,7 @@
     (cond
      ((and (= 32 last-input-event)
            emacspeak-word-echo)
-      (save-excursion
+      (save-mark-and-excursion
         (let ((orig (point)))
           (table--finish-delayed-tasks)
           (backward-word 1)
diff --git a/lisp/emacspeak-eterm.el b/lisp/emacspeak-eterm.el
index 7753e6b..d45b574 100644
--- a/lisp/emacspeak-eterm.el
+++ b/lisp/emacspeak-eterm.el
@@ -258,7 +258,7 @@ the Emacspeak pointer to be spoken."
   "Speak the line the pointer is on."
   (interactive)
   (cl-declare (special emacspeak-eterm-pointer))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (emacspeak-speak-line)))
 
@@ -266,7 +266,7 @@ the Emacspeak pointer to be spoken."
   "Speak the word  the pointer is on."
   (interactive)
   (cl-declare (special emacspeak-eterm-pointer))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (emacspeak-speak-word nil)))
 
@@ -275,7 +275,7 @@ the Emacspeak pointer to be spoken."
 Pronounces character phonetically unless  called with a PREFIX arg."
   (interactive "P")
   (cl-declare (special emacspeak-eterm-pointer))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (emacspeak-speak-char prefix)))
 
@@ -295,7 +295,7 @@ Pronounces character phonetically unless  called with a PREFIX arg."
   "Move the pointer to the top of the screen."
   (interactive)
   (cl-declare (special term-home-marker emacspeak-eterm-pointer))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char term-home-marker)  
     (set-marker emacspeak-eterm-pointer (point))
     (when (called-interactively-p 'interactive)
@@ -306,7 +306,7 @@ Pronounces character phonetically unless  called with a PREFIX arg."
   "Move the pointer to the bottom  of the screen."
   (interactive)
   (cl-declare (special  emacspeak-eterm-pointer))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char (point-max))
     (set-marker emacspeak-eterm-pointer (point))
     (when (called-interactively-p 'interactive)
@@ -320,7 +320,7 @@ Argument COUNT .specifies number of lines by which to move."
   (cl-declare (special emacspeak-eterm-pointer 
                        term-home-marker))
   (setq count (or count 1))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (forward-line (- count))
     (beginning-of-line)
@@ -336,7 +336,7 @@ Argument COUNT specifies number of lines by which to move."
   (interactive "P")
   (cl-declare (special emacspeak-eterm-pointer))
   (setq count (or count 1))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (forward-line count)
     (beginning-of-line)
@@ -352,7 +352,7 @@ Argument COUNT specifies number of columns by which to move."
   (interactive "P")
   (cl-declare (special emacspeak-eterm-pointer))
   (setq count (or count 1))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (backward-char count)
     (set-marker emacspeak-eterm-pointer (point))
@@ -366,7 +366,7 @@ Argument COUNT specifies number of columns by which to move."
   (interactive "P")
   (cl-declare (special emacspeak-eterm-pointer))
   (setq count (or count 1))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (forward-char  count)
     (set-marker emacspeak-eterm-pointer (point))
@@ -378,7 +378,7 @@ Argument COUNT specifies number of columns by which to move."
   "Move the pointer to the right edge."
   (interactive)
   (cl-declare (special emacspeak-eterm-pointer))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (end-of-line)
     (set-marker emacspeak-eterm-pointer (point))
@@ -391,7 +391,7 @@ Argument COUNT specifies number of columns by which to move."
   "Move the pointer to the right edge."
   (interactive)
   (cl-declare (special emacspeak-eterm-pointer))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (forward-line 0)
     (set-marker emacspeak-eterm-pointer (point))
@@ -407,7 +407,7 @@ Argument COUNT specifies number of words by which to move."
   (interactive "P")
   (cl-declare (special emacspeak-eterm-pointer))
   (setq count (or count 1))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (condition-case nil 
         (forward-word  (- count))
@@ -423,7 +423,7 @@ Argument COUNT specifies number of words by which to move."
   (interactive "P")
   (cl-declare (special emacspeak-eterm-pointer))
   (setq count (or count 1))
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char emacspeak-eterm-pointer)
     (condition-case nil 
         (forward-word  count)
@@ -438,7 +438,7 @@ Argument COUNT specifies number of words by which to move."
   (interactive "nGo to line:")
   (cl-declare (special emacspeak-eterm-pointer
                        term-home-marker))
-  (save-excursion 
+  (save-mark-and-excursion 
     (goto-char term-home-marker)
     (forward-line line)
     (set-marker emacspeak-eterm-pointer (point))
@@ -473,7 +473,7 @@ If found, the Emacspeak pointer is left at the hit. "
                                         ; backward search 
       (setq start (marker-position emacspeak-eterm-pointer)
             end (marker-position term-home-marker)))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char start)
       (save-restriction
         (narrow-to-region start end)
@@ -502,7 +502,7 @@ Optional argument COUNT specifies how many changes to skip."
   (setq count (or count 1))
   (let ((current (dtk-get-style emacspeak-eterm-pointer))
         (found nil))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char emacspeak-eterm-pointer)
       (setq found (text-property-not-all (point) (point-max)
                                          'personality current))
@@ -521,7 +521,7 @@ Optional argument COUNT specifies how many changes to skip."
   (setq count (or count 1))
   (let ((current (dtk-get-style emacspeak-eterm-pointer))
         (found nil))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char emacspeak-eterm-pointer)
       (setq found (text-property-not-all (point)  term-home-marker
                                          'personality current))
@@ -692,7 +692,7 @@ as a cons cell (column .  row) to a buffer position in the eterm buffer"
   (cl-declare (special term-home-marker))
   (let ((column (car coordinates))
         (row (cdr coordinates)))
-    (save-excursion
+    (save-mark-and-excursion
       (save-restriction
         (emacspeak-eterm-nuke-cached-info)
         (narrow-to-region term-home-marker (point-max))
@@ -705,7 +705,7 @@ as a cons cell (column .  row) to a buffer position in the eterm buffer"
 (defun emacspeak-eterm-position-to-coordinates (pos)
   "Translate a buffer POS in the eterm buffer to screen coordinates."
   (cl-declare (special term-home-marker))
-  (save-excursion
+  (save-mark-and-excursion
     (save-restriction
       (narrow-to-region term-home-marker (point-max))
       (goto-char pos)
@@ -731,7 +731,7 @@ Argument ETERM-WINDOW specifies a predefined eterm window."
          (emacspeak-eterm-window-top-left eterm-window))
         (bottom-right
          (emacspeak-eterm-window-bottom-right eterm-window)))
-    (save-excursion
+    (save-mark-and-excursion
       (save-restriction
         (narrow-to-region term-home-marker (point-max))
         (setq start (emacspeak-eterm-coordinates-to-position top-left)
@@ -865,7 +865,7 @@ Argument ID specifies the window."
   (cl-assert (<  id emacspeak-eterm-maximum-windows)  t
              "Your installation of Emacspeak only supports %d windows"
              emacspeak-eterm-maximum-windows)
-  (save-excursion
+  (save-mark-and-excursion
     (save-restriction
       (narrow-to-region term-home-marker (point-max))
       (dtk-speak
@@ -881,7 +881,7 @@ Argument ID specifies the window."
              "Your installation of Emacspeak only supports %d windows"
              emacspeak-eterm-maximum-windows)
   (insert 
-   (save-excursion
+   (save-mark-and-excursion
      (save-restriction
        (narrow-to-region term-home-marker (point-max))
        (emacspeak-eterm-return-window-contents
@@ -1145,7 +1145,7 @@ emacspeak-toggle-eterm-autospeak bound to
          ((and (= new-row emacspeak-eterm-row)
                (= 1 (- new-column emacspeak-eterm-column))) ;you inserted a character:
           (if (eq 32 last-command-event)
-              (save-excursion
+              (save-mark-and-excursion
                 (backward-char 2)
                 (emacspeak-speak-word nil))
             (emacspeak-speak-this-char (preceding-char))))
@@ -1154,7 +1154,7 @@ emacspeak-toggle-eterm-autospeak bound to
           (emacspeak-speak-this-char (following-char)))
          ((= emacspeak-eterm-row new-row)
           (if (= 32 (following-char))
-              (save-excursion (forward-char 1)
+              (save-mark-and-excursion (forward-char 1)
                               (emacspeak-speak-word))        
             (emacspeak-speak-word)))
          (t (emacspeak-speak-line)))
diff --git a/lisp/emacspeak-eudc.el b/lisp/emacspeak-eudc.el
index 7f0ba63..9917e77 100644
--- a/lisp/emacspeak-eudc.el
+++ b/lisp/emacspeak-eudc.el
@@ -84,7 +84,7 @@
 
 (defun emacspeak-eudc-widgets-add-emacspeak-help ()
   "Adds emacspeak widget help to all EUDC widgets. "
-  (save-excursion 
+  (save-mark-and-excursion 
     (goto-char (point-min))
     (while  (not (eobp))
       (goto-char (next-overlay-change (point)))
diff --git a/lisp/emacspeak-evil.el b/lisp/emacspeak-evil.el
index 5ffc946..54d7fca 100644
--- a/lisp/emacspeak-evil.el
+++ b/lisp/emacspeak-evil.el
@@ -194,7 +194,7 @@
      "Speak what was completed."
      (cond
       ((ems-interactive-p)
-       (let ((orig (save-excursion (skip-syntax-backward "^ >") (point))))
+       (let ((orig (save-mark-and-excursion (skip-syntax-backward "^ >") (point))))
          (ems-with-messages-silenced
           ad-do-it
           (emacspeak-auditory-icon 'complete)
diff --git a/lisp/emacspeak-eww.el b/lisp/emacspeak-eww.el
index abcc596..e7d61de 100644
--- a/lisp/emacspeak-eww.el
+++ b/lisp/emacspeak-eww.el
@@ -854,7 +854,7 @@ Retain previously set punctuations  mode."
 (defadvice eww-display-html (before emacspeak pre act comp)
   "Apply XSLT transform if requested."
   (cl-declare (special emacspeak-web-pre-process-hook))
-  (save-excursion
+  (save-mark-and-excursion
     (cond
      (emacspeak-web-pre-process-hook (emacspeak-webutils-run-pre-process-hook))
      ((and emacspeak-we-xsl-p emacspeak-we-xsl-transform)
@@ -1606,7 +1606,7 @@ Otherwise, prompts if content at point is enclosed by multiple elements."
     (or (car emacspeak-eww-element-navigation-history)
         (emacspeak-eww-read-tags-like-this "Read: "))))
   (let ((start (point)))
-    (save-excursion
+    (save-mark-and-excursion
       (emacspeak-eww-next-element  element)
       (emacspeak-auditory-icon 'select-object)
       (emacspeak-speak-region start (point)))))
@@ -1632,7 +1632,7 @@ The %s is automatically spoken if there is no user activity."
          (forward-line 1)
          (let ((start  (point)))
            (condition-case nil 
-               (save-excursion
+               (save-mark-and-excursion
                  (funcall #'emacspeak-eww-next-element s)
                  (emacspeak-speak-region start (point)))
              (error nil)))))))
@@ -1652,7 +1652,7 @@ The %s is automatically spoken if there is no user activity."
          (forward-line 1)
          (let ((start  (point)))
            (condition-case nil 
-               (save-excursion
+               (save-mark-and-excursion
                  (funcall #'emacspeak-eww-next-element s)
                  (emacspeak-speak-region start (point)))
              (error nil))))))))
diff --git a/lisp/emacspeak-forms.el b/lisp/emacspeak-forms.el
index 02dd44d..40de07a 100644
--- a/lisp/emacspeak-forms.el
+++ b/lisp/emacspeak-forms.el
@@ -101,7 +101,7 @@ Assumes that point is at the front of a field value."
   (let ((name nil)
         (value nil)
         (n-start nil))
-    (save-excursion
+    (save-mark-and-excursion
       (backward-char 1)
       (setq n-start (point)))
     (setq name (buffer-substring n-start (point)))
@@ -233,7 +233,7 @@ Assumes that point is at the front of a field value."
                                nil))))
   (let (ro)
     (setq forms--total-records
-          (save-excursion
+          (save-mark-and-excursion
             (prog1
                 (progn
                   (set-buffer forms--file-buffer)
diff --git a/lisp/emacspeak-gh-explorer.el b/lisp/emacspeak-gh-explorer.el
index 3eec4be..1eae0ea 100644
--- a/lisp/emacspeak-gh-explorer.el
+++ b/lisp/emacspeak-gh-explorer.el
@@ -76,7 +76,7 @@
   "Move forward/back based on `direction' and speak current entry."
   (emacspeak-auditory-icon 'select-object)
   (forward-line direction)
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char (line-beginning-position))
     (let ((path (cdr (assoc 'path (get-text-property (point) 'invisible))))
           (type (cdr (assoc 'type (get-text-property (point) 'invisible)))))
diff --git a/lisp/emacspeak-gnuplot.el b/lisp/emacspeak-gnuplot.el
index 71709c3..96b320c 100644
--- a/lisp/emacspeak-gnuplot.el
+++ b/lisp/emacspeak-gnuplot.el
@@ -128,7 +128,7 @@
 
 (defadvice gnuplot-complete-keyword (around emacspeak pre act)
   "Say what you completed."
-  (let ((prior (save-excursion (skip-syntax-backward "^ >") (point)))
+  (let ((prior (save-mark-and-excursion (skip-syntax-backward "^ >") (point)))
         (dtk-stop-immediately dtk-stop-immediately))
     (when dtk-stop-immediately (dtk-stop))
     ad-do-it
diff --git a/lisp/emacspeak-gnus.el b/lisp/emacspeak-gnus.el
index c8131b2..1b62cc9 100644
--- a/lisp/emacspeak-gnus.el
+++ b/lisp/emacspeak-gnus.el
@@ -127,7 +127,7 @@ instead you hear only the first screenful."
         (let ((start (point))
               (window (get-buffer-window (current-buffer))))
           (with-selected-window window
-            (save-excursion
+            (save-mark-and-excursion
               (move-to-window-line -1)
               (end-of-line)
               (emacspeak-speak-region start (point)))))))))
@@ -529,7 +529,7 @@ indicating the article is being opened."
       (let ((start  (point))
             (window (get-buffer-window (current-buffer))))
         (with-selected-window window
-          (save-excursion
+          (save-mark-and-excursion
             (move-to-window-line -1)
             (end-of-line)
             (emacspeak-speak-region start (point))))))))
@@ -578,7 +578,7 @@ indicating the article is being opened."
             (let ((start  (point))
                   (window (get-buffer-window (current-buffer))))
               (with-selected-window window
-                (save-excursion
+                (save-mark-and-excursion
                   (move-to-window-line -1)
                   (end-of-line)
                   (emacspeak-speak-region start (point)))))))))
diff --git a/lisp/emacspeak-gridtext.el b/lisp/emacspeak-gridtext.el
index 6d3722b..a5f5dd5 100644
--- a/lisp/emacspeak-gridtext.el
+++ b/lisp/emacspeak-gridtext.el
@@ -97,7 +97,7 @@ end   as specified by grid."
         (this-row nil)
         (num-rows (count-lines start end))
         (num-columns(1+  (length grid))))
-    (save-excursion
+    (save-mark-and-excursion
       (save-restriction
         (narrow-to-region start end)
         (if (< start end)
diff --git a/lisp/emacspeak-hide.el b/lisp/emacspeak-hide.el
index 00bc8f9..3238125 100644
--- a/lisp/emacspeak-hide.el
+++ b/lisp/emacspeak-hide.el
@@ -136,7 +136,7 @@ STRING is the token's text."
   (let ((token-list nil)
         (case-fold-search nil)
         token-table not-token-table)
-    (save-excursion
+    (save-mark-and-excursion
       (forward-line 0)
       (catch 'done
         (setq not-token-table emacspeak-hide-prefix-not-token-table)
@@ -185,7 +185,7 @@ Returns t if a block was found and hidden."
         (start nil)
         (continue t)
         (count 1))
-    (save-excursion
+    (save-mark-and-excursion
       (cond
        ((not prefix)
         (message "Not on a block")
@@ -232,7 +232,7 @@ Returns t if a block was found and hidden."
   (let ((start nil)
         (end nil)
         (block-name (get-text-property (point) 'emacspeak-hidden-block)))
-    (save-excursion
+    (save-mark-and-excursion
       (forward-line 0)
       (cond
        (block-name
@@ -265,7 +265,7 @@ Returns t if a block was found and hidden."
   (ems-with-messages-silenced
    (let ((count 0)
          (prefix nil))
-     (save-excursion
+     (save-mark-and-excursion
        (goto-char (point-min))
        (while (not (eobp))
          (setq prefix (emacspeak-hide-parse-prefix))
@@ -287,7 +287,7 @@ Returns t if a block was found and hidden."
   (ems-with-messages-silenced
    (let ((count 0)
          (block-end nil))
-     (save-excursion
+     (save-mark-and-excursion
        (goto-char (point-min))
        (while (not (eobp))
          (setq block-end (emacspeak-hide-expose-block))
@@ -328,7 +328,7 @@ common PREFIX.  Optional interactive prefix arg causes all
 blocks in current buffer to be hidden or exposed."
 
   (interactive "P")
-  (save-excursion
+  (save-mark-and-excursion
     (dtk-stop)
     (forward-line 0)
     (cond
@@ -377,7 +377,7 @@ and when you have heard enough navigate easily  to move past the block."
         (start nil)
         (end nil)
         (block-prefix (get-text-property (point) 'emacspeak-hide-block-prefix)))
-    (save-excursion
+    (save-mark-and-excursion
       (forward-line 0)
       (cond
        (block-prefix
diff --git a/lisp/emacspeak-imenu.el b/lisp/emacspeak-imenu.el
index 0fae019..508f24a 100644
--- a/lisp/emacspeak-imenu.el
+++ b/lisp/emacspeak-imenu.el
@@ -186,7 +186,7 @@
   "Speak upto start of next index entry"
   (interactive)
   (let ((start (point)))
-    (save-excursion
+    (save-mark-and-excursion
       (emacspeak-imenu-goto-next-index-position)
       (emacspeak-speak-region start (point)))))
 
diff --git a/lisp/emacspeak-indium.el b/lisp/emacspeak-indium.el
index 4770604..72b1224 100644
--- a/lisp/emacspeak-indium.el
+++ b/lisp/emacspeak-indium.el
@@ -128,7 +128,7 @@
 (defadvice indium-repl-return (after emacspeak pre act comp)
   "Provide auditory feedback."
   (when (ems-interactive-p)
-    (save-excursion
+    (save-mark-and-excursion
       (forward-line -1)
       (emacspeak-speak-line)
       (emacspeak-auditory-icon 'close-object))))
diff --git a/lisp/emacspeak-info.el b/lisp/emacspeak-info.el
index 94b20a2..f294a2f 100644
--- a/lisp/emacspeak-info.el
+++ b/lisp/emacspeak-info.el
@@ -86,7 +86,7 @@ node -- speak the entire node."
   "Speak current window in info buffer."
   (let ((start  (point))
         (window (get-buffer-window (current-buffer))))
-    (save-excursion
+    (save-mark-and-excursion
       (forward-line (window-height window))
       (emacspeak-speak-region start (point)))))
 
@@ -132,7 +132,7 @@ emacspeak-info-select-node-speak-chunk"
     (emacspeak-auditory-icon 'scroll)
     (let ((start  (point))
           (window (get-buffer-window (current-buffer))))
-      (save-excursion
+      (save-mark-and-excursion
         (forward-line (window-height window))
         (emacspeak-speak-region start (point))))))
 
@@ -142,7 +142,7 @@ emacspeak-info-select-node-speak-chunk"
     (emacspeak-auditory-icon 'scroll)
     (let ((start  (point))
           (window (get-buffer-window (current-buffer))))
-      (save-excursion
+      (save-mark-and-excursion
         (forward-line (window-height window))
         (emacspeak-speak-region start (point))))))
 
@@ -198,7 +198,7 @@ node-spec."
   "Move forward to next section in this node."
   (interactive)
   (let ((target nil))
-    (save-excursion
+    (save-mark-and-excursion
       (while (and (null target)
                   (not (eobp)))
         (goto-char (next-single-property-change (point)  'face nil (point-max)))
@@ -215,7 +215,7 @@ node-spec."
   "Move backward to previous section in this node."
   (interactive)
   (let ((target nil))
-    (save-excursion
+    (save-mark-and-excursion
       (while (and (null target)
                   (not (bobp)))
         (goto-char (previous-single-property-change (point)  'face nil (point-min)))
@@ -241,7 +241,7 @@ node-spec."
          (boundp 'Info-header-line)
          Info-header-line)
     (dtk-speak Info-header-line))
-   (t (save-excursion
+   (t (save-mark-and-excursion
         (goto-char (point-min))
         (emacspeak-speak-line)))))
 
diff --git a/lisp/emacspeak-jabber.el b/lisp/emacspeak-jabber.el
index 9c142e2..d60deb3 100644
--- a/lisp/emacspeak-jabber.el
+++ b/lisp/emacspeak-jabber.el
@@ -363,7 +363,7 @@ the kill ring as well."
   (cl-declare (special jabber-activity-jids))
   (cond
    (jabber-activity-jids
-    (save-excursion
+    (save-mark-and-excursion
       (jabber-activity-switch-to)
       (goto-char (point-max))
       (emacspeak-jabber-chat-previous-message)))
diff --git a/lisp/emacspeak-jdee.el b/lisp/emacspeak-jdee.el
index 20f1ae9..73c8c4d 100644
--- a/lisp/emacspeak-jdee.el
+++ b/lisp/emacspeak-jdee.el
@@ -191,7 +191,7 @@
 (defadvice jdee-bug-highlight-breakpoint (after emacspeak pre act comp)
   "Annotate line with an auditory icon. "
   (let ((start nil))
-    (save-excursion
+    (save-mark-and-excursion
       (if (ad-get-arg 0)
           (goto-line (ad-get-arg 0)))
       (beginning-of-line)
@@ -204,7 +204,7 @@
 (defadvice jdee-bug-remove-breakpoint-highlight (after emacspeak pre act comp)
   "Clear auditory annotation"
   (let ((start nil))
-    (save-excursion
+    (save-mark-and-excursion
       (beginning-of-line)
       (setq  start (point))
       (end-of-line)
@@ -314,7 +314,7 @@ If we are on the last call, do nothing."
     (dtk-speak
      (buffer-substring
       (point)
-      (save-excursion (jdee-end-of-camel-tok))))))
+      (save-mark-and-excursion (jdee-end-of-camel-tok))))))
 
 ;;}}}
 
diff --git a/lisp/emacspeak-lispy.el b/lisp/emacspeak-lispy.el
index 4513b9a..d2e2aca 100644
--- a/lisp/emacspeak-lispy.el
+++ b/lisp/emacspeak-lispy.el
@@ -181,7 +181,7 @@ Indicate  no movement if we did not move."
      "Provide auditory feedback."
      (when (ems-interactive-p)
        (emacspeak-auditory-icon 'item)
-       (save-excursion
+       (save-mark-and-excursion
          (forward-char 1)
          (emacspeak-speak-sexp))))))
 
diff --git a/lisp/emacspeak-m-player.el b/lisp/emacspeak-m-player.el
index 525f395..6a400a6 100644
--- a/lisp/emacspeak-m-player.el
+++ b/lisp/emacspeak-m-player.el
@@ -415,7 +415,7 @@ Also cleanup ANSI escape sequences."
              (or (and (boundp 'ansi-color-control-seq-regexp) ansi-color-control-seq-regexp)
                  (and (boundp 'ansi-color-drop-regexp) ansi-color-drop-regexp))))
         (insert output)
-        (save-excursion
+        (save-mark-and-excursion
           (goto-char start)
           (while (and ignore-seq-regexp (re-search-forward ignore-seq-regexp  (point-max) 'no-error))
             (delete-region (match-beginning 0) (match-end 0))))))))
diff --git a/lisp/emacspeak-make-mode.el b/lisp/emacspeak-make-mode.el
index 0b654da..d4c5c86 100644
--- a/lisp/emacspeak-make-mode.el
+++ b/lisp/emacspeak-make-mode.el
@@ -87,7 +87,7 @@
   "Speak what we completed"
   (cond
    ((ems-interactive-p)
-    (let ((orig (save-excursion (skip-syntax-backward "^ >") (point))))
+    (let ((orig (save-mark-and-excursion (skip-syntax-backward "^ >") (point))))
       ad-do-it
       (emacspeak-speak-region orig (point))))
    (t ad-do-it))
diff --git a/lisp/emacspeak-man.el b/lisp/emacspeak-man.el
index 7077899..0816c47 100644
--- a/lisp/emacspeak-man.el
+++ b/lisp/emacspeak-man.el
@@ -150,7 +150,7 @@ Also provide an auditory icon"
 (defun emacspeak-man-speak-this-section ()
   "Speak current section"
   (interactive)
-  (save-excursion
+  (save-mark-and-excursion
     (let ((start (point))
           (end nil))
       (condition-case nil
diff --git a/lisp/emacspeak-maths.el b/lisp/emacspeak-maths.el
index 499009c..70af4db 100644
--- a/lisp/emacspeak-maths.el
+++ b/lisp/emacspeak-maths.el
@@ -221,7 +221,7 @@ Otherwise, Examine head of sexp, and applies associated handler to the tail."
   (cl-declare (special emacspeak-maths))
   (let ((pause (emacspeak-maths-pause emacspeak-maths)))
     (when pause
-      (save-excursion
+      (save-mark-and-excursion
         (goto-char start)
         (skip-syntax-forward " ")
         (put-text-property
@@ -295,13 +295,13 @@ left for next run."
   (cl-declare (special emacspeak-maths))
   (with-current-buffer (process-buffer proc)
     (let ((moving (= (point) (process-mark proc))))
-      (save-excursion
+      (save-mark-and-excursion
 ;;; Insert the text, advancing the process marker.
         (goto-char (process-mark proc))
         (insert string)
         (set-marker (process-mark proc) (point)))
 ;;; Consume process output
-      (save-excursion
+      (save-mark-and-excursion
         (goto-char (point-min))
         (flush-lines "^ *$")
         (goto-char (point-min))
@@ -420,7 +420,7 @@ Set calc-language to tex to use this feature."
 ;;; $ and $$
        ((or (string= "$" delimiter)
             (string= "$$" delimiter))
-        (save-excursion
+        (save-mark-and-excursion
           (goto-char start)
           (forward-char (length delimiter))
           (setq begin (point))
diff --git a/lisp/emacspeak-metapost.el b/lisp/emacspeak-metapost.el
index b503d43..b2e340e 100644
--- a/lisp/emacspeak-metapost.el
+++ b/lisp/emacspeak-metapost.el
@@ -57,7 +57,7 @@
 
 (defadvice meta-complete-symbol (around emacspeak pre act)
   "Say what you completed."
-  (let ((prior (save-excursion (skip-syntax-backward "^ >") (point)))
+  (let ((prior (save-mark-and-excursion (skip-syntax-backward "^ >") (point)))
         (dtk-stop-immediately dtk-stop-immediately))
     (when dtk-stop-immediately (dtk-stop))
     ad-do-it
diff --git a/lisp/emacspeak-mines.el b/lisp/emacspeak-mines.el
index ee0acf2..7278164 100644
--- a/lisp/emacspeak-mines.el
+++ b/lisp/emacspeak-mines.el
@@ -123,7 +123,7 @@ to beginning of board before searching."
   (cl-declare (special mines-flagged-cell-char))
   (let ((count 0) ;;; fix over-counting 
         (m (format "%c" mines-flagged-cell-char)))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char (point-min))
       (while (search-forward  m nil t) (cl-incf count) (forward-char 1)))
     (message "%d marks" count)))
@@ -132,7 +132,7 @@ to beginning of board before searching."
   (interactive)
   (cl-declare (special  mines-number-cols mines-grid))
   (let ((cells nil))
-    (save-excursion
+    (save-mark-and-excursion
       (setq cells
             (cl-loop
              for i from 0 to (1- (length mines-state)) collect
@@ -172,7 +172,7 @@ to beginning of board before searching."
 
 (defun emacspeak-mines-cell-flagged-p (c)
   "Predicate to check if cell at index c is flagged."
-  (save-excursion
+  (save-mark-and-excursion
     (mines-goto c)
     (get-text-property (point) 'flag)))
 
diff --git a/lisp/emacspeak-muse.el b/lisp/emacspeak-muse.el
index 656e8e8..805a19c 100644
--- a/lisp/emacspeak-muse.el
+++ b/lisp/emacspeak-muse.el
@@ -113,7 +113,7 @@
           (when (ems-interactive-p)
             (emacspeak-auditory-icon 'yank-object)
             (when (sit-for 0.1)
-              (save-excursion
+              (save-mark-and-excursion
                 (backward-char)
                 (emacspeak-speak-text-range 'keymap)))))))
 
diff --git a/lisp/emacspeak-nxml.el b/lisp/emacspeak-nxml.el
index c25bf3c..9032f69 100644
--- a/lisp/emacspeak-nxml.el
+++ b/lisp/emacspeak-nxml.el
@@ -249,7 +249,7 @@
     (let ((o-open nil)
           (o-close nil)
 	  (deactivate-mark nil))
-      (save-excursion
+      (save-mark-and-excursion
         (setq o-open (car (overlays-at (point))))
         (next-line 1)
         (beginning-of-line)
diff --git a/lisp/emacspeak-org.el b/lisp/emacspeak-org.el
index 4229615..f1501ed 100644
--- a/lisp/emacspeak-org.el
+++ b/lisp/emacspeak-org.el
@@ -250,7 +250,7 @@
 
 (defadvice org-complete (around emacspeak pre act)
   "Say what you completed."
-  (let ((prior (save-excursion (skip-syntax-backward "^ >") (point)))
+  (let ((prior (save-mark-and-excursion (skip-syntax-backward "^ >") (point)))
         (dtk-stop-immediately t))
     ad-do-it
     (if (> (point) prior)
@@ -607,7 +607,7 @@ Before doing so, re-align the table if necessary."
     (org-table-maybe-eval-formula)
     (org-table-maybe-recalculate-line)
     (if (or (looking-at "[ \t]*$")
-            (save-excursion (skip-chars-backward " \t") (bolp)))
+            (save-mark-and-excursion (skip-chars-backward " \t") (bolp)))
         (newline)
       (if (and org-table-automatic-realign
                org-table-may-need-update)
diff --git a/lisp/emacspeak-origami.el b/lisp/emacspeak-origami.el
index 52c3261..83134fa 100644
--- a/lisp/emacspeak-origami.el
+++ b/lisp/emacspeak-origami.el
@@ -64,7 +64,7 @@
 (defadvice origami-hide-overlay (after emacspeak pre act comp)
   "Attach auditory icon at front."
   (let ((s
-         (save-excursion
+         (save-mark-and-excursion
            (goto-char (overlay-start (ad-get-arg 0)))
            (line-beginning-position)))
         (e (overlay-end (ad-get-arg 0))))
@@ -73,7 +73,7 @@
 (defadvice origami-show-overlay (after emacspeak pre act comp)
   "Remove auditory icon at front."
   (let ((s
-         (save-excursion
+         (save-mark-and-excursion
            (goto-char (overlay-start (ad-get-arg 0)))
            (line-beginning-position)))
         (e (overlay-end (ad-get-arg 0))))
diff --git a/lisp/emacspeak-outline.el b/lisp/emacspeak-outline.el
index 59867fd..c9fb2f1 100644
--- a/lisp/emacspeak-outline.el
+++ b/lisp/emacspeak-outline.el
@@ -201,7 +201,7 @@ commands. "
         (end nil))
     (funcall what  direction)
     (setq start (point))
-    (save-excursion
+    (save-mark-and-excursion
       (condition-case nil
           (progn
             (forward-line 1)
@@ -249,7 +249,7 @@ except that the outline section is  spoken"
   (interactive)
   (let ((start (point))
         (end nil))
-    (save-excursion
+    (save-mark-and-excursion
       (condition-case nil
           (progn
             (outline-next-visible-heading 1)
diff --git a/lisp/emacspeak-proced.el b/lisp/emacspeak-proced.el
index 4c13065..c83fd66 100644
--- a/lisp/emacspeak-proced.el
+++ b/lisp/emacspeak-proced.el
@@ -132,7 +132,7 @@
   (let ((field (emacspeak-proced-position-to-field position))
         (start nil)
         (end nil))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char
        (+ (line-beginning-position)
           (emacspeak-proced-field-start field)))
@@ -251,7 +251,7 @@
   "Update cache of processes we are displaying."
   (cl-declare (special emacspeak-proced-process-cache))
   (let ((cache nil))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char (point-min))
       (while (not (eobp))
         (goto-char (+ (line-beginning-position)
diff --git a/lisp/emacspeak-pronounce.el b/lisp/emacspeak-pronounce.el
index 626315c..7036b55 100644
--- a/lisp/emacspeak-pronounce.el
+++ b/lisp/emacspeak-pronounce.el
@@ -365,7 +365,7 @@ Optional argument FILENAME specifies the dictionary file."
            (goto-char emacspeak-pronounce-yank-word-point)
            (buffer-substring-no-properties
             (point)
-            (save-excursion
+            (save-mark-and-excursion
               (forward-word 1)
               (setq emacspeak-pronounce-yank-word-point (point)))))))
     (insert string)
diff --git a/lisp/emacspeak-py.el b/lisp/emacspeak-py.el
index 526d3ef..e250497 100644
--- a/lisp/emacspeak-py.el
+++ b/lisp/emacspeak-py.el
@@ -75,7 +75,7 @@ Provide contextual feedback when closing blocks"
         (dtk-notify-speak  (format "Indent %s "ad-return-value))
         (emacspeak-auditory-icon  'close-object)
         (sit-for 0.2)
-        (save-excursion
+        (save-mark-and-excursion
           (py-beginning-of-block)
           (emacspeak-speak-line)))))
    (t ad-do-it))
diff --git a/lisp/emacspeak-python.el b/lisp/emacspeak-python.el
index f72fc64..6e4f929 100644
--- a/lisp/emacspeak-python.el
+++ b/lisp/emacspeak-python.el
@@ -220,7 +220,7 @@
           "Provide auditory feedback."
           (when (ems-interactive-p)
             (message "%s %s lines"
-                     (save-excursion
+                     (save-mark-and-excursion
                        (goto-char (point-min))
                        (buffer-substring (line-beginning-position)
                                          (line-end-position)))
diff --git a/lisp/emacspeak-redefine.el b/lisp/emacspeak-redefine.el
index 6ea8da0..69df525 100644
--- a/lisp/emacspeak-redefine.el
+++ b/lisp/emacspeak-redefine.el
@@ -99,7 +99,7 @@ Speech flushes as you type."
        ((stringp display) (dtk-say display))
        ((and emacspeak-word-echo
              (= (char-syntax last-command-event)32))
-        (save-excursion
+        (save-mark-and-excursion
           (condition-case nil
               (forward-word -1)
             (error nil))
@@ -129,7 +129,7 @@ Speech flushes as you type."
        ((stringp display) (dtk-say display))
        ((and emacspeak-word-echo
              (= (char-syntax last-command-event)32))
-        (save-excursion
+        (save-mark-and-excursion
           (condition-case nil
               (forward-word -1)
             (error nil))
diff --git a/lisp/emacspeak-ruby.el b/lisp/emacspeak-ruby.el
index 859b8d5..b4364a9 100644
--- a/lisp/emacspeak-ruby.el
+++ b/lisp/emacspeak-ruby.el
@@ -78,7 +78,7 @@
   "Provide auditory feedback."
   (when (ems-interactive-p)
     (emacspeak-auditory-icon 'close-object)
-    (save-excursion
+    (save-mark-and-excursion
       (ruby-beginning-of-block)
       (emacspeak-speak-line))))
 
diff --git a/lisp/emacspeak-shx.el b/lisp/emacspeak-shx.el
index 1a60eaa..cab3a31 100644
--- a/lisp/emacspeak-shx.el
+++ b/lisp/emacspeak-shx.el
@@ -108,7 +108,7 @@ Provide an auditory icon if possible."
        ad-do-it
        (cond
         ((= (point) (+ count orig))
-         (save-excursion
+         (save-mark-and-excursion
            (forward-word -1)
            (emacspeak-speak-word)))
         (t
diff --git a/lisp/emacspeak-slime.el b/lisp/emacspeak-slime.el
index 9e10b25..bf30328 100644
--- a/lisp/emacspeak-slime.el
+++ b/lisp/emacspeak-slime.el
@@ -159,7 +159,7 @@
   `(defadvice  ,f (after emacspeak pre act comp)
      "Provide auditory feedback."
      (when (ems-interactive-p)
-       (save-excursion
+       (save-mark-and-excursion
          (goto-char
           (previous-single-property-change (point)   'face nil (point-min)))
          (emacspeak-speak-this-personality-chunk))
@@ -173,7 +173,7 @@
   `(defadvice ,f (around emacspeak pre act comp)
      "Say what you completed."
      (ems-with-messages-silenced
-      (let ((prior (save-excursion (skip-syntax-backward "^ >") (point))))
+      (let ((prior (save-mark-and-excursion (skip-syntax-backward "^ >") (point))))
         ad-do-it
         (if (> (point) prior)
             (tts-with-punctuations
diff --git a/lisp/emacspeak-smartparens.el b/lisp/emacspeak-smartparens.el
index eea474c..c571526 100644
--- a/lisp/emacspeak-smartparens.el
+++ b/lisp/emacspeak-smartparens.el
@@ -110,7 +110,7 @@
     (when dtk-stop-immediately (dtk-stop))
     (let ((start (point))
           (dtk-stop-immediately nil))
-      (save-excursion
+      (save-mark-and-excursion
         (forward-word -1)
         (emacspeak-auditory-icon 'delete-object)
         (emacspeak-speak-region (point) start)))))
diff --git a/lisp/emacspeak-solitaire.el b/lisp/emacspeak-solitaire.el
index d1af791..aaf5f9a 100644
--- a/lisp/emacspeak-solitaire.el
+++ b/lisp/emacspeak-solitaire.el
@@ -109,7 +109,7 @@
 (defun emacspeak-solitaire-show-column ()
   "Audio format current column."
   (interactive)
-  (save-excursion
+  (save-mark-and-excursion
     (let ((row (emacspeak-solitaire-current-row))
           (column (emacspeak-solitaire-current-column))
           (cells nil))
diff --git a/lisp/emacspeak-speak.el b/lisp/emacspeak-speak.el
index 5a06dea..df56d98 100644
--- a/lisp/emacspeak-speak.el
+++ b/lisp/emacspeak-speak.el
@@ -408,7 +408,7 @@ Argument BODY specifies forms to execute."
 
 (defun emacspeak-audio-annotate-paragraphs ()
   "Set property auditory-icon at front of all paragraphs."
-  (save-excursion
+  (save-mark-and-excursion
     (let ((deactivate-mark nil))
       (goto-char (point-max))
       (with-silent-modifications
@@ -436,7 +436,7 @@ Useful to do this before you listen to an entire buffer."
   (when
       (and  emacspeak-speak-paragraph-personality
             (null emacspeak-speak-voice-annotated-paragraphs)) ; memoized
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char (point-min))
       (condition-case nil
           (let ((start nil)
@@ -1097,7 +1097,7 @@ of line to point."
          (end (line-end-position))
          (line nil)
          (orig (point)))
-    (save-excursion
+    (save-mark-and-excursion
       (beginning-of-visual-line)
       (setq start (max (point) start))
       (end-of-visual-line)
@@ -1175,7 +1175,7 @@ spelled out  instead of being spoken."
   (cl-declare (special emacspeak-speak-last-spoken-word-position))
   (when (listp arg) (setq arg (car arg)))
   (emacspeak-handle-action-at-point)
-  (save-excursion
+  (save-mark-and-excursion
     (let ((orig (point))
           (inhibit-point-motion-hooks t)
           (inhibit-modification-hooks t)
@@ -1392,7 +1392,7 @@ With prefix ARG, speaks the rest of the sentence  from point.
 Negative prefix arg speaks from start of sentence to point."
   (interactive "P")
   (when (listp arg) (setq arg (car arg)))
-  (save-excursion
+  (save-mark-and-excursion
     (let ((orig (point))
           (deactivate-mark nil)
           (inhibit-point-motion-hooks t)
@@ -1417,7 +1417,7 @@ With prefix ARG, speaks the rest of the sexp  from point.
 Negative prefix arg speaks from start of sexp to point. "
   (interactive "P")
   (when (listp arg) (setq arg (car arg)))
-  (save-excursion
+  (save-mark-and-excursion
     (let ((orig (point))
           (deactivate-mark nil)
           (inhibit-point-motion-hooks t)
@@ -1447,7 +1447,7 @@ Negative prefix arg will read from start of current page to point.
 If option  `voice-lock-mode' is on, then it will use any defined personality."
   (interactive "P")
   (when (listp arg) (setq arg (car arg)))
-  (save-excursion
+  (save-mark-and-excursion
     (let ((orig (point))
           (deactivate-mark nil)
           (inhibit-point-motion-hooks t)
@@ -1471,7 +1471,7 @@ Negative prefix arg will read from start of current paragraph to point.
 If voice-lock-mode is on, then it will use any defined personality. "
   (interactive "P")
   (when (listp arg) (setq arg (car arg)))
-  (save-excursion
+  (save-mark-and-excursion
     (let ((orig (point))
           (deactivate-mark nil)
           (inhibit-point-motion-hooks t)
@@ -1772,7 +1772,7 @@ indicating the arrival  of new mail when displaying the mode line.")
 ;;;compute current line number
 (defun emacspeak-get-current-line-number ()
   (let ((start (point)))
-    (save-excursion
+    (save-mark-and-excursion
       (save-restriction
         (widen)
         (goto-char (point-min))
@@ -2061,7 +2061,7 @@ Displays name of current buffer.")
   "Read a line without moving.
 Line to read is specified relative to the current line, prefix args gives the
 offset. Default  is to speak the previous line. "
-  (save-excursion
+  (save-mark-and-excursion
     (cond
      ((zerop arg) (emacspeak-speak-line))
      ((zerop (forward-line arg))
@@ -2086,7 +2086,7 @@ Default is to read the next line. "
   "Read a word without moving.
 word  to read is specified relative to the current word, prefix args gives the
 offset. Default  is to speak the previous word. "
-  (save-excursion
+  (save-mark-and-excursion
     (cond
      ((= arg 0) (emacspeak-speak-word))
      ((forward-word arg)
@@ -2373,7 +2373,7 @@ by a change in voice personality."
           (if current-prefix-arg
               (elt mark-ring (1- count))
             (mark)))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char pos)
       (ems-set-personality-temporarily
        pos (1+ pos) voice-animate
@@ -2422,7 +2422,7 @@ Return buffer position or nil on failure."
   (let ((result nil)
         (start max)
         (continue t))
-    (save-excursion
+    (save-mark-and-excursion
       (while (and continue
                   (not
                    (or (< (point) min)
@@ -2702,7 +2702,7 @@ set the current local value to the result.")
     (skip-syntax-forward "^ ")
     (skip-syntax-forward " ")
     (setq start (point))
-    (save-excursion
+    (save-mark-and-excursion
       (skip-syntax-forward "^ ")
       (emacspeak-speak-field start (point)))))
 
@@ -2777,7 +2777,7 @@ Otherwise just display a message."
   "Return window contents."
   (let ((deactivate-mark nil)
         (start nil))
-    (save-excursion
+    (save-mark-and-excursion
       (move-to-window-line 0)
       (setq start (point))
       (move-to-window-line -1)
@@ -2810,7 +2810,7 @@ Semantics  of `other' is the same as for the builtin Emacs command
 `other-window'.
 Optional argument ARG  specifies `other' window to speak."
   (interactive "nSpeak window")
-  (save-excursion
+  (save-mark-and-excursion
     (save-window-excursion
       (other-window arg)
       (save-current-buffer
@@ -2917,7 +2917,7 @@ Semantics  of `other' is the same as for the builtin Emacs command
         (setq window
               (read-number "Window   between 1 and 9 to speak" 1)))
     (setq window (1- window))
-    (save-excursion
+    (save-mark-and-excursion
       (save-window-excursion
         (other-window window)
         (emacspeak-speak-region (window-start) (window-end nil t))))))
@@ -3120,12 +3120,12 @@ value to apply."
        "Matches "
        (cond
 ;;; Show what precedes the open in its line, if anything.
-        ((save-excursion
+        ((save-mark-and-excursion
            (skip-chars-backward " \t")
            (not (bolp)))
          (buffer-substring (line-beginning-position) (1+ blinkpos)))
 ;;; Show what follows the open in its line, if anything.
-        ((save-excursion
+        ((save-mark-and-excursion
            (forward-char 1)
            (skip-chars-forward " \t")
            (not (eolp)))
@@ -3157,7 +3157,7 @@ Also display match context in minibuffer."
              blink-matching-paren
              ;; Verify an even number of quoting characters precede the close.
              (= 1 (logand 1 (- (point)
-                               (save-excursion
+                               (save-mark-and-excursion
                                  (forward-char -1)
                                  (skip-syntax-backward "/\\")
                                  (point))))))
@@ -3167,7 +3167,7 @@ Also display match context in minibuffer."
            message-log-max  ; Don't log messages about paren matching.
            matching-paren
            open-paren-line-string)
-      (save-excursion
+      (save-mark-and-excursion
         (save-restriction
           (if blink-matching-paren-distance
               (narrow-to-region (max (minibuffer-prompt-end)
@@ -3201,22 +3201,22 @@ Also display match context in minibuffer."
           ;; Matching open within window, temporarily move to blinkpos but only
           ;; if `blink-matching-paren-on-screen' is non-nil.
           (and blink-matching-paren-on-screen
-               (save-excursion
+               (save-mark-and-excursion
                  (goto-char blinkpos)
                  (emacspeak-speak-blinkpos-message blinkpos)
                  (sit-for blink-matching-delay))))
          (t
-          (save-excursion
+          (save-mark-and-excursion
             (goto-char blinkpos)
             (setq open-paren-line-string
                   ;; Show what precedes the open in its line, if anything.
-                  (if (save-excursion
+                  (if (save-mark-and-excursion
                         (skip-chars-backward " \t")
                         (not (bolp)))
                       (buffer-substring (line-beginning-position)
                                         (1+ blinkpos))
                     ;; Show what follows the open in its line, if anything.
-                    (if (save-excursion
+                    (if (save-mark-and-excursion
                           (forward-char 1)
                           (skip-chars-forward " \t")
                           (not (eolp)))
@@ -3224,7 +3224,7 @@ Also display match context in minibuffer."
                                           (line-end-position))
                       ;; Otherwise show the previous nonblank line,
                       ;; if there is one.
-                      (if (save-excursion
+                      (if (save-mark-and-excursion
                             (skip-chars-backward "\n \t")
                             (not (bobp)))
                           (concat
@@ -3282,10 +3282,10 @@ Argument O specifies overlay."
     (message "Not on white space"))
    (t
     (let ((orig (point))
-          (start (save-excursion
+          (start (save-mark-and-excursion
                    (skip-syntax-backward " ")
                    (point)))
-          (end (save-excursion
+          (end (save-mark-and-excursion
                  (skip-syntax-forward " ")
                  (point))))
       (message "Space %s of %s"
@@ -3306,7 +3306,7 @@ Argument O specifies overlay."
 (defun emacspeak-make-string-inaudible (string)
   (unless (string-match "^ *$" string)
     (with-silent-modifications
-      (save-excursion
+      (save-mark-and-excursion
         (goto-char (point-min))
         (save-match-data
           (with-silent-modifications
@@ -3412,7 +3412,7 @@ Speak text between point and the char we hit."
   (interactive (list (read-char "Char: ")))
   (let ((start (point))
         (goal nil))
-    (save-excursion
+    (save-mark-and-excursion
       (cond
        ((search-forward (format "%c" char)
                         (point-max)
@@ -3668,7 +3668,7 @@ This command  is designed for use in a windowing environment like X."
         (base-position completion-base-position)
         (insert-function completion-list-insert-choice-function)
         (choice
-         (save-excursion
+         (save-mark-and-excursion
            (let (beg end)
              (cond
               ((and (not (eobp)) (get-text-property (point) 'mouse-face))
diff --git a/lisp/emacspeak-speedbar.el b/lisp/emacspeak-speedbar.el
index a8dcc1d..082bfa5 100644
--- a/lisp/emacspeak-speedbar.el
+++ b/lisp/emacspeak-speedbar.el
@@ -84,10 +84,10 @@
 (defun emacspeak-speedbar-speak-line()
   "Speak a line in the speedbar display"
   (let ((indent nil))  
-    (save-excursion
+    (save-mark-and-excursion
       (beginning-of-line)
       (setq indent 
-            (save-excursion
+            (save-mark-and-excursion
               (save-match-data
                 (beginning-of-line)
                 (string-to-number
@@ -205,7 +205,7 @@ An automatically updating speedbar consumes resources.")
   (dtk-speak
    (concat "Speedbar: "
            (let ((start nil))
-             (save-excursion 
+             (save-mark-and-excursion 
                (beginning-of-line)
                (setq start (point))
                (end-of-line)
@@ -214,7 +214,7 @@ An automatically updating speedbar consumes resources.")
 (defun emacspeak-speedbar-click ()
   "Does the equivalent of the mouse click from the keyboard"
   (interactive)
-  (save-excursion
+  (save-mark-and-excursion
     (beginning-of-line)
     (let ((target
            (if (get-text-property (point) 'speedbar-function)
@@ -318,7 +318,7 @@ An automatically updating speedbar consumes resources.")
             emacspeak-speedbar-tag-personality)
            (t 'emacspeak-speedbar-default-personality)))
     (put-text-property start end 'personality personality)
-    (save-excursion
+    (save-mark-and-excursion
       (save-match-data
         (beginning-of-line)))))
 
diff --git a/lisp/emacspeak-tabulate.el b/lisp/emacspeak-tabulate.el
index 045d18a..c47fcef 100644
--- a/lisp/emacspeak-tabulate.el
+++ b/lisp/emacspeak-tabulate.el
@@ -73,7 +73,7 @@ Fields are assumed to be delimited by whitespace. "
         (first nil)
         (last nil)
         (continue t))
-    (save-excursion
+    (save-mark-and-excursion
       (end-of-line)
       (setq end (point))
       (beginning-of-line)
@@ -108,7 +108,7 @@ Fields are assumed to be delimited by whitespace. "
             start tmp)))
   (save-restriction 
     (narrow-to-region start end)
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char start)
       (let  ((try nil)
              (first nil)
@@ -179,7 +179,7 @@ in the white-space."
                    (count-lines start end)
                    (+ 1 (length white-space)))
         (sit-for 1.5)
-        (save-excursion
+        (save-mark-and-excursion
           (goto-char end)
           (beginning-of-line)
           (setq bl  (point))
@@ -231,7 +231,7 @@ in the white-space."
         (element nil))
     (setq column-count (1+ (length white-space)))
     (setq table (make-vector row-count nil))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char start)
       (cl-loop for
                i from 0 to (1- row-count)
diff --git a/lisp/emacspeak-tcl.el b/lisp/emacspeak-tcl.el
index 00ee55f..9708745 100644
--- a/lisp/emacspeak-tcl.el
+++ b/lisp/emacspeak-tcl.el
@@ -154,7 +154,7 @@ is a Tcl expression, and the last argument is Tcl commands.")
   (when (ems-interactive-p)
     (let* ((start nil)
            (proc-line
-            (save-excursion
+            (save-mark-and-excursion
               (tcl-beginning-of-defun)
               (setq start (point))
               (end-of-line)
diff --git a/lisp/emacspeak-tetris.el b/lisp/emacspeak-tetris.el
index bc3da82..ceb8ec6 100644
--- a/lisp/emacspeak-tetris.el
+++ b/lisp/emacspeak-tetris.el
@@ -113,7 +113,7 @@
 
 (defun emacspeak-tetris-get-current-row ()
   (cl-declare (special tetris-border))
-  (save-excursion
+  (save-mark-and-excursion
     (beginning-of-line)
     (let ((start nil))
       (while (not (= (following-char) tetris-border)) (forward-char 1))
diff --git a/lisp/emacspeak-vdiff.el b/lisp/emacspeak-vdiff.el
index aba8630..35e8fa7 100644
--- a/lisp/emacspeak-vdiff.el
+++ b/lisp/emacspeak-vdiff.el
@@ -103,14 +103,14 @@
 (defun emacspeak-vdiff-speak-other-hunk ()
   "Speak corresponding hunk from other buffer."
   (interactive)
-  (save-excursion
+  (save-mark-and-excursion
     (vdiff-switch-buffer (line-number-at-pos))
     (emacspeak-vdiff-speak-this-hunk)))
 
 (defun emacspeak-vdiff-speak-other-line ()
   "Speak corresponding line from other buffer."
   (interactive)
-  (save-excursion
+  (save-mark-and-excursion
     (vdiff-switch-buffer (line-number-at-pos))
     (emacspeak-speak-line)))
 
diff --git a/lisp/emacspeak-view.el b/lisp/emacspeak-view.el
index dc76c7a..ca81030 100644
--- a/lisp/emacspeak-view.el
+++ b/lisp/emacspeak-view.el
@@ -183,7 +183,7 @@
     (let ((start (point)))
       ad-do-it
       (emacspeak-auditory-icon 'scroll)
-      (save-excursion
+      (save-mark-and-excursion
         (end-of-line)
         (dtk-speak
          (buffer-substring
@@ -197,7 +197,7 @@
     (let ((start (point)))
       ad-do-it
       (emacspeak-auditory-icon 'scroll)
-      (save-excursion
+      (save-mark-and-excursion
         (end-of-line)
         (dtk-speak
          (buffer-substring
@@ -210,7 +210,7 @@
   (when (ems-interactive-p)
     (let ((start (point)))
       (emacspeak-auditory-icon 'scroll)
-      (save-excursion
+      (save-mark-and-excursion
         (forward-line (window-height))
         (emacspeak-speak-region start (point))))))
 
diff --git a/lisp/emacspeak-vm.el b/lisp/emacspeak-vm.el
index bf35cc6..baf52ba 100644
--- a/lisp/emacspeak-vm.el
+++ b/lisp/emacspeak-vm.el
@@ -104,7 +104,7 @@ Note that some badly formed mime messages  cause trouble."
 
 (defadvice vm-minibuffer-complete-word (around emacspeak pre act)
   "Say what you completed."
-  (let ((prior (save-excursion (skip-syntax-backward "^ >") (point)))
+  (let ((prior (save-mark-and-excursion (skip-syntax-backward "^ >") (point)))
         (dtk-stop-immediately t))
     (emacspeak-kill-buffer-carefully "*Completions*")
     ad-do-it
@@ -119,7 +119,7 @@ Note that some badly formed mime messages  cause trouble."
 
 (defadvice vm-minibuffer-complete-word-and-exit (around emacspeak pre act)
   "Say what you completed."
-  (let ((prior (save-excursion (skip-syntax-backward "^ >") (point)))
+  (let ((prior (save-mark-and-excursion (skip-syntax-backward "^ >") (point)))
         (dtk-stop-immediately t))
     (emacspeak-kill-buffer-carefully "*Completions*")
     ad-do-it
@@ -283,7 +283,7 @@ that has been forwarded multiple times."
 Then speak the screenful. "
   (when (ems-interactive-p)
     (emacspeak-auditory-icon 'scroll)
-    (save-excursion
+    (save-mark-and-excursion
       (let ((start  (point))
             (window (get-buffer-window (current-buffer))))
         (forward-line (window-height window))
@@ -294,7 +294,7 @@ Then speak the screenful. "
 Then speak the screenful. "
   (when (ems-interactive-p)
     (emacspeak-auditory-icon 'scroll)
-    (save-excursion
+    (save-mark-and-excursion
       (let ((start  (point))
             (window (get-buffer-window (current-buffer))))
         (forward-line(-  (window-height window)))
diff --git a/lisp/emacspeak-w3m.el b/lisp/emacspeak-w3m.el
index 9b90c8b..eac0eaf 100644
--- a/lisp/emacspeak-w3m.el
+++ b/lisp/emacspeak-w3m.el
@@ -176,7 +176,7 @@ This hack helps to deal with some specially designed forms."
              (value-at-start anchor-index)
              (value-at-pos nil)
              anchor-text)
-        (save-excursion
+        (save-mark-and-excursion
           (goto-char start)
           (cl-loop do
                 (when (and (integerp value-at-start) (not value-at-pos))
@@ -513,14 +513,14 @@ This hack helps to deal with some specially designed forms."
           "Speech-enable scrolling."
           (cond
            ((ems-interactive-p)
-            (let ((opoint (save-excursion
+            (let ((opoint (save-mark-and-excursion
                             (beginning-of-line)
                             (point))))
               ;; hide opoint from advised function
               (let (opoint) ad-do-it)
               (emacspeak-auditory-icon 'scroll)
               (emacspeak-speak-region opoint
-                                      (save-excursion (end-of-line)
+                                      (save-mark-and-excursion (end-of-line)
                                                       (point)))))
            (t ad-do-it))
           ad-return-value)))
diff --git a/lisp/emacspeak-wizards.el b/lisp/emacspeak-wizards.el
index d812ca7..aaf7944 100644
--- a/lisp/emacspeak-wizards.el
+++ b/lisp/emacspeak-wizards.el
@@ -534,7 +534,7 @@ the display to speak."
     (setq win
           (nth (% window (length window-list))
                window-list))
-    (save-excursion
+    (save-mark-and-excursion
       (save-window-excursion
         (emacspeak-speak-region
          (window-point win)
@@ -1870,7 +1870,7 @@ Moves to the longest line when called interactively."
   (interactive "r")
   (let ((max 0)
         (where nil))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char start)
       (while (and (not (eobp))
                   (< (point) end))
@@ -1894,7 +1894,7 @@ Moves to the shortest line when called interactively."
   (interactive "r")
   (let ((min 1)
         (where (point)))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char start)
       (while (and (not (eobp))
                   (< (point) end))
@@ -1922,7 +1922,7 @@ Moves to the longest paragraph when called interactively."
   (let ((max 0)
         (where nil)
         (para-start start))
-    (save-excursion
+    (save-mark-and-excursion
       (goto-char start)
       (while (and (not (eobp))
                   (< (point) end))
@@ -2694,7 +2694,7 @@ Lang is obtained from property `lang' on string, or  via an interactive prompt."
 (defun emacspeak-wizards-espeak-region (start end)
   "Speak region using ESpeak polyglot wizard."
   (interactive "r")
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char start)
     (while (< start end)
       (goto-char
diff --git a/lisp/emacspeak-xml-shell.el b/lisp/emacspeak-xml-shell.el
index 436757f..f9701f8 100644
--- a/lisp/emacspeak-xml-shell.el
+++ b/lisp/emacspeak-xml-shell.el
@@ -283,7 +283,7 @@ HTML head if none found."
      start end))
   (emacspeak-xml-shell-setup-html-base
    emacspeak-xml-shell-document)
-  (save-excursion
+  (save-mark-and-excursion
     (goto-char (point-min))
     (while (search-forward "-------" nil t)
       (replace-match "<br>")))
diff --git a/lisp/emacspeak-xslt.el b/lisp/emacspeak-xslt.el
index d373a36..4eb66bc 100644
--- a/lisp/emacspeak-xslt.el
+++ b/lisp/emacspeak-xslt.el
@@ -119,7 +119,7 @@ the result.  This uses XSLT processor xsltproc available as
 part of the libxslt package."
   (cl-declare (special emacspeak-xslt-program emacspeak-xslt-options
                        emacspeak-xslt-keep-errors modification-flag))
-  (save-excursion
+  (save-mark-and-excursion
     (with-silent-modifications
       (let ((command nil)
             (parameters (when params
diff --git a/lisp/g-client/g-utils.el b/lisp/g-client/g-utils.el
index 1f574ce..a5f68b3 100644
--- a/lisp/g-client/g-utils.el
+++ b/lisp/g-client/g-utils.el
@@ -166,7 +166,7 @@ Customize this to live on your local disk."
 ;;; this helper returns number of bytes.
 (defun g-buffer-bytes (&optional buffer)
   "Return number of bytes in a buffer."
-  (save-excursion
+  (save-mark-and-excursion
     (and buffer (set-buffer buffer))
     (1- (position-bytes (point-max)))))
 
@@ -221,7 +221,7 @@ Customize this to live on your local disk."
 (defun g-html-unescape-region (start end)
   "Unescape HTML entities."
   (cl-declare (special g-html-charent-alist))
-  (save-excursion
+  (save-mark-and-excursion
     (cl-loop for entry in g-html-charent-alist
              do
              (let ((entity (car  entry))
@@ -233,7 +233,7 @@ Customize this to live on your local disk."
 (defun g-html-escape-region (start end)
   "Escape HTML entities."
   (cl-declare (special g-html-charent-alist))
-  (save-excursion
+  (save-mark-and-excursion
     (cl-loop for entry in g-html-charent-alist
              do
              (let ((entity (cdr  entry))
