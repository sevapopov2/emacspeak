From: "Igor B. Poretsky" <poretsky@rakurs.com>
Date: Thu, 24 Nov 2022 17:05:58 +0300
Subject: Get rid of deprecated construction

---
 lisp/emacspeak-ocr.el        |  3 +--
 lisp/emacspeak-re-builder.el |  9 +++------
 lisp/emacspeak-remote.el     |  3 +--
 lisp/emacspeak-we.el         |  9 +++------
 lisp/emacspeak-websearch.el  |  3 +--
 lisp/emacspeak-wizards.el    |  4 +---
 lisp/emacspeak-xml-shell.el  | 18 ++++++------------
 lisp/g-client/g-utils.el     |  6 ++----
 8 files changed, 18 insertions(+), 37 deletions(-)

diff --git a/lisp/emacspeak-ocr.el b/lisp/emacspeak-ocr.el
index edda275..b187349 100644
--- a/lisp/emacspeak-ocr.el
+++ b/lisp/emacspeak-ocr.el
@@ -347,8 +347,7 @@ For detailed help, invoke command emacspeak-ocr bound to
                        emacspeak-ocr-document-name
                        buffer-read-only))
   (let  ((buffer (emacspeak-ocr-get-buffer)))
-    (save-excursion
-      (set-buffer buffer)
+    (with-current-buffer buffer
       (emacspeak-ocr-mode)
       (when (file-exists-p emacspeak-ocr-working-directory)
         (cd emacspeak-ocr-working-directory))
diff --git a/lisp/emacspeak-re-builder.el b/lisp/emacspeak-re-builder.el
index fef6f88..a51bf64 100644
--- a/lisp/emacspeak-re-builder.el
+++ b/lisp/emacspeak-re-builder.el
@@ -80,8 +80,7 @@
   "Speak matched line."
   (when (ems-interactive-p)
     (let ((emacspeak-show-point t))
-      (save-excursion
-        (set-buffer reb-target-buffer)
+      (with-current-buffer reb-target-buffer
         (emacspeak-speak-line)
         (emacspeak-auditory-icon 'large-movement)))))
 
@@ -89,16 +88,14 @@
   "Speak matched line."
   (when (ems-interactive-p)
     (let ((emacspeak-show-point t))
-      (save-excursion
-        (set-buffer reb-target-buffer)
+      (with-current-buffer reb-target-buffer
         (emacspeak-speak-line)
         (emacspeak-auditory-icon 'large-movement)))))
 
 (defadvice reb-toggle-case (after emacspeak pre act comp)
   "Provide spoken feedback."
   (when (ems-interactive-p)
-    (save-excursion
-      (set-buffer reb-target-buffer)
+    (with-current-buffer reb-target-buffer
       (emacspeak-auditory-icon (if case-fold-search 'on 'off)))))
 
 (defadvice reb-copy (after emacspeak pre act comp)
diff --git a/lisp/emacspeak-remote.el b/lisp/emacspeak-remote.el
index 156a588..103638a 100644
--- a/lisp/emacspeak-remote.el
+++ b/lisp/emacspeak-remote.el
@@ -111,8 +111,7 @@ Value is persisted for use with ssh servers."
   (when (file-exists-p   emacspeak-remote-hostname)
     (let ((buffer (find-file-noselect emacspeak-remote-hostname))
           (result nil))
-      (save-excursion
-        (set-buffer buffer)
+      (with-current-buffer buffer
         (setq result (buffer-substring (point-min) (1- (point-max)))))
       (kill-buffer buffer)
       result)))
diff --git a/lisp/emacspeak-we.el b/lisp/emacspeak-we.el
index e521a1b..fe2ce41 100644
--- a/lisp/emacspeak-we.el
+++ b/lisp/emacspeak-we.el
@@ -546,8 +546,7 @@ Tables are specified by containing  match pattern
   "Build class cache and forward it to rendered page."
   (let ((values nil)
         (content (clone-buffer)))
-    (save-excursion
-      (set-buffer content)
+    (with-current-buffer content
       (setq buffer-undo-list t)
       (emacspeak-xslt-run
        (emacspeak-xslt-get "class-values.xsl")
@@ -574,8 +573,7 @@ Tables are specified by containing  match pattern
   "Build id cache and forward it to rendered page."
   (let ((values nil)
         (content (clone-buffer)))
-    (save-excursion
-      (set-buffer content)
+    (with-current-buffer content
       (setq buffer-undo-list t)
       (emacspeak-xslt-run
        (emacspeak-xslt-get "id-values.xsl")
@@ -599,8 +597,7 @@ Tables are specified by containing  match pattern
   "Build role cache and forward it to rendered page."
   (let ((values nil)
         (content (clone-buffer)))
-    (save-excursion
-      (set-buffer content)
+    (with-current-buffer content
       (setq buffer-undo-list t)
       (emacspeak-xslt-run
        (emacspeak-xslt-get "role-values.xsl")
diff --git a/lisp/emacspeak-websearch.el b/lisp/emacspeak-websearch.el
index 2db6f14..bb67f96 100644
--- a/lisp/emacspeak-websearch.el
+++ b/lisp/emacspeak-websearch.el
@@ -116,8 +116,7 @@
                         (< (car a)
                            (car b)))))
     (with-output-to-temp-buffer "*Help*"
-      (save-excursion
-        (set-buffer "*Help*")
+      (with-current-buffer "*Help*"
         (princ "Websearch Keys:\n\n")
         (cl-loop for m in map
                  do
diff --git a/lisp/emacspeak-wizards.el b/lisp/emacspeak-wizards.el
index 5ffc82e..6d7a4eb 100644
--- a/lisp/emacspeak-wizards.el
+++ b/lisp/emacspeak-wizards.el
@@ -2430,9 +2430,7 @@ buffer keyed by `key'gets the key of buffer `buffer'."
 ;;{{{ show commentary:
 (defun ems-cleanup-commentary (commentary)
   "Cleanup commentary."
-  (save-excursion
-    (set-buffer
-     (get-buffer-create " *doc-temp*"))
+  (with-current-buffer (get-buffer-create " *doc-temp*")
     (erase-buffer)
     (insert commentary)
     (goto-char (point-min))
diff --git a/lisp/emacspeak-xml-shell.el b/lisp/emacspeak-xml-shell.el
index 93eeb47..436757f 100644
--- a/lisp/emacspeak-xml-shell.el
+++ b/lisp/emacspeak-xml-shell.el
@@ -110,8 +110,7 @@ Interactive XML browser.
                                    (list "--html")
                                  nil)
                                (list system-id)))))
-    (save-excursion
-      (set-buffer buffer)
+    (with-current-buffer buffer
       (emacspeak-xml-shell-mode)
       (run-hooks 'emacspeak-xml-shell-hooks)
       (setq emacspeak-xml-shell-process
@@ -157,8 +156,7 @@ Interactive XML browser.
 (defun emacspeak-xml-shell-navigate (xpath)
   "Navigate to the node specified by xpath."
   (cl-declare (special emacspeak-xml-shell-process))
-  (save-excursion
-    (set-buffer (process-buffer emacspeak-xml-shell-process))
+  (with-current-buffer (process-buffer emacspeak-xml-shell-process)
     (goto-char (point-max))
     (insert
      (format "cd %s"
@@ -207,8 +205,7 @@ and end."
      (let ((stream  ,accumulate)
            (processor (function ,post-processor))
            (done  ,terminator))
-       (save-excursion
-         (set-buffer stream)
+       (with-current-buffer stream
          (goto-char (point-max))
          (cond
           ((string-match done output)
@@ -222,8 +219,7 @@ and end."
            (funcall processor
                     (point-min) (point-max))
            (kill-buffer stream)
-           (save-excursion
-             (set-buffer (process-buffer process))
+           (with-current-buffer (process-buffer process)
              (goto-char (point-max))
              (comint-send-input)))
           (t (insert output)))))))
@@ -246,11 +242,9 @@ region of text to process."
   (let ((accumulator nil)
         (terminator nil)
         (accumulate (get-buffer-create "*xml-shell-accumulator*")))
-    (save-excursion
-      (set-buffer accumulate)
+    (with-current-buffer accumulate
       (erase-buffer))
-    (save-excursion
-      (set-buffer (process-buffer emacspeak-xml-shell-process))
+    (with-current-buffer (process-buffer emacspeak-xml-shell-process)
       (goto-char (process-mark emacspeak-xml-shell-process))
       (setq terminator (ems--this-line))
       (setq accumulator (emacspeak-xml-shell-create-accumulator
diff --git a/lisp/g-client/g-utils.el b/lisp/g-client/g-utils.el
index 62ddaed..1f574ce 100644
--- a/lisp/g-client/g-utils.el
+++ b/lisp/g-client/g-utils.el
@@ -306,8 +306,7 @@ references, poor-man's xpath."
          (coding-system-for-read 'binary)
          (coding-system-for-write 'binary)
          (buffer-undo-list t))
-     (save-excursion
-       (set-buffer  buffer)
+     (with-current-buffer  buffer
        (kill-all-local-variables)
        (erase-buffer)
        (progn ,@body))))
@@ -363,8 +362,7 @@ XML string is transformed via style
 XML  is transformed via style
   and previewed via `g-html-handler'."
   (cl-declare (special g-xslt-program g-html-handler))
-  (save-excursion
-    (set-buffer buffer)
+  (with-current-buffer buffer
     (when style
       (g-xsl-transform-region (point-min) (point-max) style))
     (funcall g-html-handler (current-buffer))))
