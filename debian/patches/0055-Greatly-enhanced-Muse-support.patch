From: "Igor B. Poretsky" <poretsky@mlbox.ru>
Date: Thu, 10 Nov 2022 22:59:22 +0300
Subject: Greatly enhanced Muse support

---
 lisp/emacspeak-muse.el | 117 ++++++++++++++++++++++++++++++++++++++++++++-----
 lisp/emacspeak.el      |   1 +
 2 files changed, 107 insertions(+), 11 deletions(-)

diff --git a/lisp/emacspeak-muse.el b/lisp/emacspeak-muse.el
index 9fbcadb..656e8e8 100644
--- a/lisp/emacspeak-muse.el
+++ b/lisp/emacspeak-muse.el
@@ -66,24 +66,119 @@
    (muse-header-3 voice-bolden-extra)
    (muse-header-4 voice-bolden-extra)
    (muse-header-5 voice-bolden-extra)
+   (muse-header-6 voice-bolden-extra)
    (muse-link-face voice-brighten)
    (muse-verbatim-face voice-monotone)
+   (muse-header-1-face voice-bolden)
+   (muse-header-2-face voice-bolden-medium)
+   (muse-header-3-face voice-bolden-extra)
+   (muse-header-4-face voice-bolden-extra)
+   (muse-header-5-face voice-bolden-extra)
+   (muse-header-6-face voice-bolden-extra)
+   (muse-bad-link voice-bolden-and-animate)
+   (muse-link voice-brighten)
+   (muse-verbatim voice-monotone)
    ))
 
 ;;}}}
 ;;{{{ advice interactive commands
+
+(defadvice muse-mode (after emacspeak pre act comp)
+  "Setup Emacspeak extensions."
+  (voice-lock-mode (if global-voice-lock-mode 1 -1))
+  (dtk-set-punctuations 'all))
+
+(cl-loop for f in
+      '(muse-next-reference muse-previous-reference)
+      do
+      (eval
+       `(defadvice ,f (after emacspeak pre act comp)
+          "Provide speech feedback."
+          (when (ems-interactive-p)
+            (if (muse-link-at-point)
+                (progn
+                  (emacspeak-auditory-icon 'large-movement)
+                  (emacspeak-speak-text-range 'keymap))
+              (emacspeak-auditory-icon 'warn-user)
+              (dtk-speak-and-echo "No links on this page"))))))
+
+(cl-loop for f in
+      '(muse-edit-link-at-point
+        muse-insert-relative-link-to-file
+        muse-insert-url)
+      do
+      (eval
+       `(defadvice ,f (after emacspeak pre act comp)
+          "Provide speech feedback."
+          (when (ems-interactive-p)
+            (emacspeak-auditory-icon 'yank-object)
+            (when (sit-for 0.1)
+              (save-excursion
+                (backward-char)
+                (emacspeak-speak-text-range 'keymap)))))))
+
+(cl-loop for f in
+      '(muse-follow-name-at-point
+        muse-follow-name-at-point-other-window
+        muse-index)
+      do
+      (eval
+       `(defadvice   ,f (after emacspeak pre act comp)
+          "Provide auditory feedback."
+          (when (ems-interactive-p)
+            (emacspeak-auditory-icon 'open-object)
+            (emacspeak-speak-mode-line)))))
+
+(defadvice muse-project-find-file (around emacspeak pre act comp)
+  "Provide auditory feedback."
+  (when (listp (ad-get-arg 0))
+    (ad-set-arg 0 (car (ad-get-arg 0))))
+  ad-do-it
+  (when (ems-interactive-p)
+    (emacspeak-auditory-icon 'open-object)
+    (emacspeak-speak-mode-line))
+  ad-return-value)
+
 (cl-loop for f in
-         '(muse-follow-name-at-point
-           muse-follow-name-at-point-other-window
-           muse-next-reference
-           muse-previous-reference)
-         do
-         (eval
-          `(defadvice   ,f (after emacspeak pre act comp)
-             "Provide auditory feedback."
-             (when (ems-interactive-p)
-               (emacspeak-auditory-icon 'large-movement)
-               (emacspeak-speak-line)))))
+      '(muse-project-publish
+        muse-project-publish-this-file
+        muse-publish-this-file)
+      do
+      (eval
+       `(defadvice ,f (after emacspeak pre act comp)
+          "Produce an auditory icon if possible."
+          (when (ems-interactive-p)
+            (emacspeak-auditory-icon 'save-object)))))
+
+(defadvice muse-insert-tag (after emacspeak pre act comp)
+  "Provide auditory feedback."
+  (when (ems-interactive-p)
+    (emacspeak-auditory-icon 'yank-object)
+    (emacspeak-speak-line)))
+
+(defadvice muse-insert-list-item (after emacspeak pre act comp)
+  "Provide auditory feedback."
+  (when (ems-interactive-p)
+    (emacspeak-auditory-icon 'item)
+    (emacspeak-speak-line)))
+
+(defadvice muse-decrease-list-item-indentation (after emacspeak pre act comp)
+  "Provide auditory feedback."
+  (when (ems-interactive-p)
+    (emacspeak-auditory-icon 'left)
+    (emacspeak-speak-line)))
+
+(defadvice muse-increase-list-item-indentation (after emacspeak pre act comp)
+  "Provide auditory feedback."
+  (when (ems-interactive-p)
+    (emacspeak-auditory-icon 'right)
+    (emacspeak-speak-line)))
+
+(defadvice muse-colors-toggle-inline-images (after emacspeak pre act comp)
+  "Produce an auditory icon if possible."
+  (cl-declare (special muse-colors-inline-images))
+  (when (ems-interactive-p)
+    (emacspeak-auditory-icon (if muse-colors-inline-images 'on 'off))))
 
 ;;}}}
 (provide 'emacspeak-muse)
diff --git a/lisp/emacspeak.el b/lisp/emacspeak.el
index 0983f17..4915f50 100644
--- a/lisp/emacspeak.el
+++ b/lisp/emacspeak.el
@@ -261,6 +261,7 @@ that implements the speech-enabling extensions for `package' (a string)."
 (emacspeak-do-package-setup "mines" 'emacspeak-mines)
 (emacspeak-do-package-setup "mpuz" 'emacspeak-entertain)
 (emacspeak-do-package-setup "mspools" 'emacspeak-mspools)
+(emacspeak-do-package-setup "muse" 'emacspeak-muse)
 (emacspeak-do-package-setup "nero" 'emacspeak-nero)
 (emacspeak-do-package-setup "navi-mode" 'emacspeak-navi-mode)
 (emacspeak-do-package-setup "net-utils" 'emacspeak-net-utils)
